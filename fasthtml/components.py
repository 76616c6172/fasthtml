# AUTOGENERATED! DO NOT EDIT! File to edit: ../01_components.ipynb.

# %% auto 0
__all__ = ['Checkbox', 'Hidden', 'set_val', 'find_inps', 'fill_form', 'fill_dataclass']

# %% ../01_components.ipynb 2
from fastcore.xml import *
from dataclasses import dataclass, asdict

# %% ../01_components.ipynb 4
def Checkbox(checked:bool=False, label=None, **kw):
    if not checked: checked=None
    res = Input(type="checkbox", checked=checked, **kw)
    if label: res = Label(res, label)
    return res

# %% ../01_components.ipynb 7
def Hidden(value:str="", **kw):
    return Input(type="hidden", value=value, **kw)

# %% ../01_components.ipynb 8
def set_val(tag, attr, val):
    if attr.get('type', '') in ('checkbox','radio'):
        if val: attr['checked'] = '1'
        else: attr.pop('checked', '')
    else: attr['value'] = val

# %% ../01_components.ipynb 9
def find_inps(html):
    if not html: return []
    tag,cs,attrs = html
    if tag == 'input': return [html]
    res = []
    for c in cs:
        if isinstance(c, list): res.extend(find_inps(c))
    return res

# %% ../01_components.ipynb 10
def fill_form(form, obj):
    "Modifies form in-place and returns it"
    inps = find_inps(form)
    inps = {attrs['id']:(tag,attrs) for tag,c,attrs in inps if 'id' in attrs}
    for nm,val in asdict(obj).items():
        if nm in inps:
            tag,attr = inps[nm]
            set_val(tag, attr, val)
    return form

# %% ../01_components.ipynb 12
def fill_dataclass(src, dest):
    "Modifies dataclass in-place and returns it"
    for nm,val in asdict(src).items(): setattr(dest, nm, val)
    return dest
